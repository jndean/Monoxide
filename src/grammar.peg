

function: 'fn' name '(' name_list ')' '(' name_list ')' '{'
               statement*
           '}' '~' name '(' name_list ')' ;

name_list: name ^ ',' ;

statement: (let_stmt | unlet_stmt | modop_stmt | if_stmt) ';' {t0};

if_stmt: 'if' '(' expression ')' 
         '{' statement* '}'
         ('else' '{' statement* '}' )?
         '~' 'if' '(' expression? ')' ;

modop_stmt: lookup modop expression ;

unlet_stmt: name '=:' expression ;

let_stmt: name ':=' expression ;


expression: expression binop expression
          | '(' expression ')'
          | '-' expression
          | '!' expression
          | NUMBER
          | lookup
          | array_literal 
          | array_range
          ;

lookup: name ('[' expression ']' {t1})* ;

name: '.'? NAME ;

binop: '+' | '-' | '*' | '/' ;

modop '+=' | '-=' | '*=' | '/=' | '%=' | '//=' | '**=' | '&=' | '|=' | '^=' ;